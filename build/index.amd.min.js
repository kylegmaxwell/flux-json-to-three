define(["three"],function(three){"use strict";function VectorManager(){this._vectorData=[],this._vectorCount=0}function moveGeometry(object,vector){object.position.copy(vector),object.updateMatrix(),object.geometry.applyMatrix(object.matrix),object.position.set(0,0,0)}function rotateGeometry(object,vector){object.rotation.set(vector.x,vector.y,vector.z),object.updateMatrix(),object.geometry.applyMatrix(object.matrix),object.rotation.set(0,0,0)}function cone(data,material){var geometry,mesh;return geometry=new three.CylinderGeometry(0,data.radius,data.height,32),mesh=new three.Mesh(geometry,material),moveGeometry(mesh,new three.Vector3(0,.5*data.height,0)),rotateGeometry(mesh,DEFAULT_ROTATION),mesh}function cylinder(data,material){var geometry,mesh;return geometry=new three.CylinderGeometry(data.radius,data.radius,data.height,32),mesh=new three.Mesh(geometry,material),moveGeometry(mesh,new three.Vector3(0,.5*data.height,0)),rotateGeometry(mesh,DEFAULT_ROTATION),mesh}function sphere(data,material){var geometry,mesh;return geometry=new three.SphereBufferGeometry(data.radius,12,8),mesh=new three.Mesh(geometry,material),rotateGeometry(mesh,DEFAULT_ROTATION),mesh}function torus(data,material){var geometry=new three.TorusGeometry(data.major_radius,data.minor_radius,24,24);return new three.Mesh(geometry,material)}function block(data,material){var geometry=new three.BoxGeometry(data.dimensions[0],data.dimensions[1],data.dimensions[2]);return new three.Mesh(geometry,material)}function circle(data,material){var geometry=new three.CircleGeometry(data.radius,32);return new three.Mesh(geometry,material)}function rectangle(data,material){var geometry=new three.PlaneBufferGeometry(data.dimensions[0],data.dimensions[1]);return new three.Mesh(geometry,material)}function plane(data,material){var geometry=new three.PlaneBufferGeometry(PLANE_DEFAULTS.WIDTH,PLANE_DEFAULTS.HEIGHT,PLANE_DEFAULTS.WIDTH_SEGMENTS,PLANE_DEFAULTS.HEIGHT_SEGMENTS);return new three.Mesh(geometry,material)}function point(data,material){var positions=new Float32Array(data.point),geometry=new three.BufferGeometry;return geometry.addAttribute("position",new three.BufferAttribute(positions,3)),geometry.computeBoundingBox(),new three.Points(geometry,material)}function vector(data){var dir=new three.Vector3(data.coords[0],data.coords[1],data.coords[2]),origin=new three.Vector3(0,0,0);if(!(dir.length()>0))throw new Error("Vector primitive has length zero");return dir.normalize(),new three.ArrowHelper(dir,origin,dir.length())}function line(data,material){var geometry=new three.BufferGeometry,vertices=new Float32Array(data.start.concat(data.end));return geometry.addAttribute("position",new three.BufferAttribute(vertices,3)),new three.Line(geometry,material)}function polycurve(data,material){var i,len,mesh=new three.Object3D;for(i=0,len=data.curves.length;len>i;i++)mesh.add(curve(data.curves[i],material));return mesh}function curve(data,material){var nurbsControlPoints=_createControlPoints(data),geometry=new three.Geometry;if(data.knots.length!==nurbsControlPoints.length+data.degree+1)throw new Error("Number of uKnots in a NURBS curve should equal degree + N + 1, where N is the number of control points");return geometry.vertices=data.degree>1?new three.NURBSCurve(data.degree,data.knots,nurbsControlPoints).getPoints(nurbsControlPoints.length*data.degree*4):nurbsControlPoints,new three.Line(geometry,material)}function _createControlPoints(data){for(var currentControlPoint,controlPoints=data.controlPoints,result=[],i=0,weights=data.weights,len=controlPoints.length;len>i;i++)currentControlPoint=controlPoints[i],result.push(new three.Vector4(currentControlPoint[0],currentControlPoint[1],currentControlPoint[2],weights?weights[i]:1));return result}function arc(data,material){var geometry,vertices;if(!data.start||!data.middle||!data.end)throw new Error("Can not create arc due to incomplete definition.");var a=vec.alloc().set(data.start[0],data.start[1],data.start[2]),b=vec.alloc().set(data.middle[0],data.middle[1],data.middle[2]),c=vec.alloc().set(data.end[0],data.end[1],data.end[2]),ab=vec.clone(b).sub(a),bc=vec.clone(c).sub(b);if(ab.length()<TOLERANCE||bc.length()<TOLERANCE||1-Math.abs(vec.clone(ab).normalize().dot(vec.clone(bc).normalize()))<TOLERANCE)vertices=new Float32Array(9),_setVecInArray(vertices,0,a),_setVecInArray(vertices,3,b),_setVecInArray(vertices,6,c);else{var abMid=vec.alloc();_computeMidpoint(a,b,abMid);var bcMid=vec.alloc();_computeMidpoint(b,c,bcMid);var up=vec.alloc().crossVectors(ab,bc).normalize(),abPerp=vec.alloc().crossVectors(ab,up).normalize(),bcPerp=vec.alloc().crossVectors(up,bc).normalize(),center=vec.alloc();_intersectLines(abMid,bcMid,abPerp,bcPerp,center),vertices=_tessellateArc(a,c,ab,bc,center,up)}return geometry=new three.BufferGeometry,geometry.addAttribute("position",new three.BufferAttribute(vertices,3)),vec.clear(),new three.Line(geometry,material)}function _computeMidpoint(a,b,midPoint){midPoint.copy(b),midPoint.sub(a),midPoint.multiplyScalar(.5),midPoint.add(a)}function _tessellateArc(a,c,ab,bc,center,up){var relA=vec.clone(a).sub(center),relC=vec.clone(c).sub(center),angle=relA.angleTo(relC),angleABC=Math.PI-ab.angleTo(bc);angleABC<.5*Math.PI&&(angle=2*Math.PI-angle);for(var numSections=Math.ceil(angle*(42/(2*Math.PI))),dTheta=angle/numSections,vertices=new Float32Array(3*(numSections+1)),i=0;numSections>=i;i++)vertices[3*i]=relA.x+center.x,vertices[3*i+1]=relA.y+center.y,vertices[3*i+2]=relA.z+center.z,relA.applyAxisAngle(up,dTheta);return vertices}function _intersectLines(p0,p1,d0,d1,intersect){for(var t0,x,y,cases=["x","y","x","z","y","x","y","z","z","x","z","y"],i=0;isFinite(t0)&&i<cases.length;)x=cases[i],y=cases[i+1],t0=(p0[x]-p1[x]-p0[y]*d1[x]/d1[y]+p1[y]*d1[x]/d1[y])/(d0[y]*d1[x]/d1[y]-d0[x]),i+=2;intersect.copy(d0).multiplyScalar(t0).add(p0)}function _setVecInArray(arr,offset,vec){arr[offset]=vec.x,arr[offset+1]=vec.y,arr[offset+2]=vec.z}function mesh(data,material){for(var face,geometry=new three.Geometry,i=0,len=data.vertices.length;len>i;i++)geometry.vertices.push(new three.Vector3(data.vertices[i][0],data.vertices[i][1],data.vertices[i][2]));for(i=0,len=data.faces.length;len>i;i++)face=data.faces[i],3===face.length?geometry.faces.push(new three.Face3(face[0],face[1],face[2])):4===face.length&&(geometry.faces.push(new three.Face3(face[0],face[1],face[2])),geometry.faces.push(new three.Face3(face[0],face[2],face[3])));return geometry.computeBoundingSphere(),geometry.computeFaceNormals(),new three.Mesh(geometry,material)}function _polygonToThree(polygon){var polygonThree={boundary:[],holes:[]};if(_pointArrayToThree(polygonThree.boundary,polygon.boundary),!polygon.holes)return polygonThree;for(var i=0,len=polygon.holes.length;len>i;i++){var holeThree=[];polygonThree.holes.push(holeThree),_pointArrayToThree(holeThree,polygon.holes[i])}return polygonThree}function _pointArrayToThree(pointsThree,pointsArray){for(var i=0,len=pointsArray.length;len>i;i++)pointsThree.push(vec.convert(pointsArray[i]))}function polygonSet(data,material){for(var p=vec.alloc(),n=vec.alloc(),u=vec.alloc(),v=vec.alloc(),i=0,len=data.polygons.length;len>i;i++){var polygon=_polygonToThree(data.polygons[i]);_computePointBasis(p,n,u,v,polygon.boundary);var p0=vec.clone(polygon.boundary[0]);if(!_isPlanarPolygon(polygon,n,p0))throw new Error("Non planar polygon in polygonSet");var polygon2d={boundary:[],holes:[]};if(_reduceCoordinates(polygon2d.boundary,polygon.boundary,u,v,p0),polygon.holes)for(var j=0,jLen=polygon.holes.length;jLen>j;j++)polygon2d.holes.push([]),_reduceCoordinates(polygon2d.holes[j],polygon.holes[j],u,v,p0);var geometry=_makeShapeGeometry(polygon2d);_restoreCoordinates(geometry,p,u,v)}return new three.Mesh(geometry,material)}function _isPlanarArray(pointsThree,n,p0){for(var pointRel=vec.alloc(),i=0,len=pointsThree.length;len>i;i++)if(pointRel.copy(pointsThree[i]).sub(p0),Math.abs(pointRel.dot(n))>TOLERANCE)return!1;return!0}function _isPlanarPolygon(polyThree,n,p0){var planar=_isPlanarArray(polyThree.boundary,n,p0);if(!polyThree.holes)return planar;for(var i=0,len=polyThree.holes.length;len>i&&planar;i++)_isPlanarArray(polyThree.holes[i],n,p0)||(planar=!1);return planar}function _reduceCoordinates(destPoints,srcPoints,u,v,p0){for(var s,t,p=vec.alloc(),i=0,len=srcPoints.length;len>i;i++)p.copy(srcPoints[i]).sub(p0),s=p.dot(u),t=p.dot(v),destPoints.push(vec.alloc().set(s,t,0))}function _restoreCoordinates(geometry,p,u,v){for(var uTmp=vec.alloc(),vTmp=vec.alloc(),i=0,len=geometry.vertices.length;len>i;i++){var vert=geometry.vertices[i],s=vert.x,t=vert.y;uTmp.copy(u),vTmp.copy(v),vert.copy(p),vert.add(uTmp.multiplyScalar(s)),vert.add(vTmp.multiplyScalar(t))}geometry.verticesNeedUpdate=!0}function _computePointBasis(p,n,u,v,points){if(n.set(0,0,1),!(points.length<3)){p.copy(points[0]);var v0=vec.alloc().copy(points[0]);u.copy(points[1]),v.copy(points[points.length-1]),u.sub(v0).normalize(),v.sub(v0).normalize(),n.crossVectors(u,v).normalize(),v.crossVectors(n,u).normalize()}}function _makeShapeGeometry(polygon){var shape=_makeShape(polygon.boundary);_makeShapeHoles(shape,polygon.holes);var geometry=new THREE.ShapeGeometry(shape);return geometry.computeBoundingSphere(),geometry.computeFaceNormals(),geometry}function _makeShapeHoles(shape,holes){for(var i=0,len=holes.length;len>i;i++){var hole=_makeShape(holes[i]);shape.holes.push(hole)}}function _makeShape(boundary){for(var shape=new THREE.Shape,i=0,len=boundary.length;len>i;i++)shape.moveTo(boundary[i].x,boundary[i].y);return shape}function polyline(data,material){for(var point,geometry=new three.Geometry,i=0,len=data.points.length;len>i;i++)point=data.points[i],geometry.vertices.push(new three.Vector3(point[0],point[1],point[2]));return new three.Line(geometry,material)}function surface(data,material){for(var j,len2,controlPointRow,point,arr,nsControlPoints=[],controlPoints=data.controlPoints,i=0,len=controlPoints.length;len>i;i++)for(arr=[],nsControlPoints.push(arr),controlPointRow=controlPoints[i],j=0,len2=controlPointRow.length;len2>j;j++)point=controlPointRow[j],arr.push(new three.Vector4(point[0],point[1],point[2],data.weights?data.weights[j*len+j]:1));if(data.uKnots.length!==nsControlPoints[0].length+data.uDegree+1)throw new Error("Number of uKnots in a NURBS surface should equal uDegree + N + 1, where N is the number of control points along U direction");if(data.vKnots.length!==nsControlPoints.length+data.vDegree+1)throw new Error("Number of vKnots in a NURBS surface should equal vDegree + N + 1, where N is the number of control points along V direction");var nurbsSurface=new three.NURBSSurface(data.vDegree,data.uDegree,data.vKnots,data.uKnots,nsControlPoints),geometry=new three.ParametricGeometry(function(u,v){return nurbsSurface.getPoint(u,v)},data.vDegree*nsControlPoints.length*4,data.uDegree*nsControlPoints[0].length*4);return geometry.computeFaceNormals(),new three.Mesh(geometry,material)}function polysurface(data,material){for(var mesh=new three.Object3D,i=0,len=data.surfaces.length;len>i;i++)mesh.add(surface(data.surfaces[i],material));return mesh}function text(data){return new three.TextHelper(data.text,{size:data.size,resolution:data.resolution,color:data.color,align:data.align})}function createPrimitive(data){var materialProperties=_findMaterialProperties(data),material=_createMaterial(PRIMITIVE_TO_MATERIAL[data.primitive],materialProperties),primFunction=primitiveHelpers[_resolveLegacyNames(data.primitive)];if(primFunction){var axis,mesh=primFunction(data,material);if(mesh)return _convertToZUp(mesh),data.origin&&_applyOrigin(mesh,data.origin),axis=data.axis||data.direction||data.normal,axis&&mesh.lookAt(mesh.position.clone().add(new three.Vector3(axis[0],axis[1],axis[2]))),data.attributes&&data.attributes.tag&&(mesh.userData.tag=data.attributes.tag),"Mesh"===mesh.type&&(materialProperties.polygonOffset=!0,materialProperties.polygonOffsetFactor=1,materialProperties.polygonOffsetUnits=1),mesh.materialProperties=materialProperties,mesh;throw new Error("Unsupported geometry type: "+data.primitive)}}function _findMaterialProperties(data){return data.attributes?data.attributes.materialProperties:data.materialProperties?data.materialProperties:{side:three.DoubleSide}}function _createMaterial(type,materialProperties){return materialProperties&&!materialProperties.side&&(materialProperties.side=three.DoubleSide),type===PHONG?new three.MeshPhongMaterial(materialProperties):type===POINT?new three.PointsMaterial(materialProperties):type===LINE?new three.LineBasicMaterial(materialProperties):void 0}function _resolveLegacyNames(name){switch(name){case"point":case"point-2d":return"point";case"polygon-set":case"polygonSet":return"polygonSet";default:return name}}function _convertToZUp(object){object.up.set(0,0,1),object.rotation.order="YXZ"}function _applyOrigin(mesh,origin){mesh.position.set(origin[0],origin[1],origin[2]?origin[2]:0)}function createObject(data,mergeModels){var root={mesh:null,invalidPrims:{}};return null==mergeModels&&(mergeModels=DEFAULTS.MERGE_MODELS),data&&(data.primitive?_handlePrimitives(data,root):data.Entities?_handleEntities(data,root):data.constructor===Array&&_handleArray(data,root,mergeModels)),root}function _handlePrimitives(data,root){root.mesh=createPrimitive(data),root.mesh||(root.invalidPrims[data.primitive]=!0)}function _handleEntities(data,root){var key,key2,results;for(key in data.Entities){results=createObject(data.Entities[key]),results.mesh&&(root.mesh||(root.mesh=new three.Object3D),root.mesh.add(results.mesh));for(key2 in results.invalidPrims)root.invalidPrims[key2]=!0}}function _handleArray(data,root,mergeModels){var key,results,i=0,len=data.length;for(root.mesh||(root.mesh=new three.Object3D);len>i;i++){results=createObject(data[i]),results.mesh&&(results.mesh.updateMatrixWorld(!0),mergeModels&&!results.mesh.materialProperties?_mergeModels(results.mesh,root):root.mesh.add(results.mesh));for(key in results.invalidPrims)root.invalidPrims[key]=!0}root.mesh&&_upgradeChildrenToBuffer(root.mesh)}function _mergeModels(mesh,root){root.mesh||(root.mesh=new three.Object3D);for(var children=root.mesh.children,i=0,len=children.length;len>i;i++)if(_objectDoesntHaveBufferGeometry(children[i]))return void children[i].geometry.merge(mesh.geometry,mesh.matrixWorld);root.mesh.add(mesh)}function _objectDoesntHaveBufferGeometry(object){return object.geometry&&!(object.geometry instanceof three.BufferGeometry)}function _upgradeChildrenToBuffer(object){for(var child,i=0,len=object.children.length;len>i;i++)child=object.children[i],_objectDoesntHaveBufferGeometry(child)&&_upgradeGeometryToBuffer(child)}function _upgradeGeometryToBuffer(object){object.geometry=(new three.BufferGeometry).fromGeometry(object.geometry)}VectorManager.prototype.alloc=function(){var result;return this._vectorCount<this._vectorData.length?result=this._vectorData[this._vectorCount]:(result=new three.Vector3,this._vectorData.push(result)),this._vectorCount+=1,result},VectorManager.prototype.clear=function(){return this._vectorCount=0,this},VectorManager.prototype.clone=function(v){return this.alloc().copy(v)},VectorManager.prototype.convert=function(arr){return this.alloc().set(arr[0],arr[1],arr[2])};var HALF_PI=.5*Math.PI,TOLERANCE=1e-6,DEFAULT_ROTATION=new three.Vector3(HALF_PI,HALF_PI,0),PLANE_DEFAULTS={WIDTH:1e4,HEIGHT:1e4,WIDTH_SEGMENTS:100,HEIGHT_SEGMENTS:100},vec=new VectorManager,primitiveHelpers=Object.freeze({cone:cone,cylinder:cylinder,sphere:sphere,torus:torus,block:block,circle:circle,rectangle:rectangle,plane:plane,point:point,vector:vector,line:line,polycurve:polycurve,curve:curve,arc:arc,mesh:mesh,polygonSet:polygonSet,polyline:polyline,surface:surface,polysurface:polysurface,text:text}),PHONG=0,POINT=1,LINE=2,PRIMITIVE_TO_MATERIAL={cone:PHONG,cylinder:PHONG,sphere:PHONG,torus:PHONG,block:PHONG,circle:PHONG,rectangle:PHONG,plane:PHONG,point:POINT,"point-2d":POINT,line:LINE,polycurve:LINE,curve:LINE,arc:LINE,mesh:PHONG,"polygon-set":PHONG,polygonSet:PHONG,polyline:LINE,surface:PHONG},DEFAULTS={MERGE_MODELS:!0};return createObject});